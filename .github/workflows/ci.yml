name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: justificantes_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -p$MYSQL_ROOT_PASSWORD"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Esperar a que MySQL esté listo
        run: |
          echo "Esperando a que MySQL esté listo..."
          for i in {1..30}; do
            if docker exec $(docker ps -qf "ancestor=mysql:8") mysqladmin ping -h localhost -proot --silent; then
              echo "MySQL listo!"
              break
            fi
            echo "Esperando..."
            sleep 5
          done

      - name: Crear base de datos y tabla
        run: |
          echo "Creando tabla de ejemplo..."
          sudo apt-get install -y mysql-client
          mysql -h 127.0.0.1 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS justificantes_db;"
          mysql -h 127.0.0.1 -uroot -proot justificantes_db -e "
            CREATE TABLE IF NOT EXISTS solicitudes (
              id INT AUTO_INCREMENT PRIMARY KEY,
              nombre VARCHAR(100),
              grupo VARCHAR(50),
              motivo TEXT,
              fecha_ausencia DATE,
              fecha_solicitud TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
          "

      - name: Instalar dependencias del backend
        run: |
          cd backend
          npm ci

      - name: Verificar Jest instalado
        run: |
          cd backend
          ls -la ./node_modules/.bin/
          npx jest --version

      - name: Ejecutar tests (usando npx)
        run: |
          cd backend
          npx jest --runInBand

      
